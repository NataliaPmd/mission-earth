import QuillType from 'quill';
import { QuillConfig, QuillModules } from './quill-editor.interfaces';
import { AfterViewInit, ElementRef, OnChanges, Renderer2, SimpleChanges, NgZone } from '@angular/core';
import { CustomOption, CustomModule } from './quill-editor.interfaces';
import { QuillService } from './quill.service';
import * as ɵngcc0 from '@angular/core';
export declare class QuillViewComponent implements AfterViewInit, OnChanges {
    private platformId;
    private config;
    private renderer;
    private elementRef;
    private zone;
    private service;
    quillEditor: QuillType;
    editorElem: HTMLElement;
    format?: 'object' | 'html' | 'text' | 'json';
    theme?: string;
    modules?: QuillModules;
    debug?: 'warn' | 'log' | 'error' | false;
    formats?: string[] | null;
    strict: boolean;
    content: any;
    customModules: CustomModule[];
    customOptions: CustomOption[];
    preserveWhitespace: boolean;
    constructor(platformId: any, config: QuillConfig, renderer: Renderer2, elementRef: ElementRef, zone: NgZone, service: QuillService);
    valueSetter: (quillEditor: QuillType, value: any) => any;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<QuillViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<QuillViewComponent, "quill-view", never, { "strict": "strict"; "customModules": "customModules"; "customOptions": "customOptions"; "preserveWhitespace": "preserveWhitespace"; "format": "format"; "theme": "theme"; "modules": "modules"; "debug": "debug"; "formats": "formats"; "content": "content"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicXVpbGwtdmlldy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFF1aWxsVHlwZSBmcm9tICdxdWlsbCc7XG5pbXBvcnQgeyBRdWlsbENvbmZpZywgUXVpbGxNb2R1bGVzIH0gZnJvbSAnLi9xdWlsbC1lZGl0b3IuaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDdXN0b21PcHRpb24sIEN1c3RvbU1vZHVsZSB9IGZyb20gJy4vcXVpbGwtZWRpdG9yLmludGVyZmFjZXMnO1xuaW1wb3J0IHsgUXVpbGxTZXJ2aWNlIH0gZnJvbSAnLi9xdWlsbC5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFF1aWxsVmlld0NvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgY29uZmlnO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIHNlcnZpY2U7XG4gICAgcXVpbGxFZGl0b3I6IFF1aWxsVHlwZTtcbiAgICBlZGl0b3JFbGVtOiBIVE1MRWxlbWVudDtcbiAgICBmb3JtYXQ/OiAnb2JqZWN0JyB8ICdodG1sJyB8ICd0ZXh0JyB8ICdqc29uJztcbiAgICB0aGVtZT86IHN0cmluZztcbiAgICBtb2R1bGVzPzogUXVpbGxNb2R1bGVzO1xuICAgIGRlYnVnPzogJ3dhcm4nIHwgJ2xvZycgfCAnZXJyb3InIHwgZmFsc2U7XG4gICAgZm9ybWF0cz86IHN0cmluZ1tdIHwgbnVsbDtcbiAgICBzdHJpY3Q6IGJvb2xlYW47XG4gICAgY29udGVudDogYW55O1xuICAgIGN1c3RvbU1vZHVsZXM6IEN1c3RvbU1vZHVsZVtdO1xuICAgIGN1c3RvbU9wdGlvbnM6IEN1c3RvbU9wdGlvbltdO1xuICAgIHByZXNlcnZlV2hpdGVzcGFjZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihwbGF0Zm9ybUlkOiBhbnksIGNvbmZpZzogUXVpbGxDb25maWcsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSwgc2VydmljZTogUXVpbGxTZXJ2aWNlKTtcbiAgICB2YWx1ZVNldHRlcjogKHF1aWxsRWRpdG9yOiBRdWlsbFR5cGUsIHZhbHVlOiBhbnkpID0+IGFueTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogUHJvbWlzZTx2b2lkPjtcbn1cbiJdfQ==